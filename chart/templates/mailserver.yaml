apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}"
  labels:
    {{- include "commonLabels" . | indent 4 }}
spec:
  serviceName: "{{ .Release.Name }}"
  replicas: 1
  selector:
    matchLabels:
      {{- include "commonLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "commonLabels" . | indent 8 }}
    spec:
      terminationGracePeriodSeconds: 300
      initContainers: {{- toYaml .Values.initContainers | nindent 8 }}
      containers:
      - name: postfix
        image: {{ template "imageFullName" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - "/opt/postfix/entrypoint.sh"
        - "/usr/sbin/postfix"
        - "start-fg"
        ports:
        - name: smtp
          containerPort: 25
        - name: submission
          containerPort: 587
        - name: smtps
          containerPort: 485
        {{- if .Values.postfix.resources }}
        resources: {{- toYaml .Values.postfix.resources | nindent 10 }}
        {{- end }}
        env:
        {{- toYaml .Values.env | nindent 10 }}
        volumeMounts:
        - name: data
          mountPath: /mail-storage
        - name: run
          mountPath: /run
        - name: postfix-config
          mountPath: /config
        - name: postfix-secure-config
          mountPath: /secure-config
        - name: tls-secret
          mountPath: /secret-tls
        {{- if .Values.postfix.volumeMounts }}
        {{- toYaml .Values.postfix.volumeMounts | nindent 8 }}
        {{- end }}
      - name: dovecot
        image: {{ template "imageFullName" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - "/opt/dovecot/entrypoint.sh"
        - "/usr/sbin/dovecot"
        - "-F"
        ports:
        - name: pop3
          containerPort: 110
        - name: pop3s
          containerPort: 995
        - name: imap
          containerPort: 143
        - name: imaps
          containerPort: 993
        {{- if .Values.dovecot.resources }}
        resources: {{- toYaml .Values.dovecot.resources | nindent 10 }}
        {{- end }}
        env:
        {{- toYaml .Values.env | nindent 10 }}
        volumeMounts:
        - name: run
          mountPath: /run
        - name: dovecot-config
          mountPath: /config
        - name: dovecot-secure-config
          mountPath: /secure-config
        - name: tls-secret
          mountPath: /secret-tls
        {{- if .Values.dovecot.volumeMounts }}
        {{- toYaml .Values.dovecot.volumeMounts | nindent 8 }}
        {{- end }}
      - name: opendkim
        image: {{ template "imageFullName" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - "/opt/opendkim/entrypoint.sh"
        - "/usr/sbin/opendkim"
        - "-f"
        - "-u"
        - "opendkim"
        {{- if .Values.opendkim.resources }}
        resources: {{- toYaml .Values.opendkim.resources | nindent 10 }}
        {{- end }}
        env:
        {{- toYaml .Values.env | nindent 10 }}
        volumeMounts:
        - name: run
          mountPath: /run
        - name: opendkim-secret
          mountPath: /secret-dkim
          readOnly: true
        {{- if .Values.opendkim.volumeMounts }}
        {{- toYaml .Values.opendkim.volumeMounts | nindent 8 }}
        {{- end }}
      {{- if .Values.sidecars }}
      {{- toYaml .Values.sidecars | nindent 6 }}
      {{- end }}
      volumes:
      - name: run
        emptyDir: {}
      - name: postfix-config
        configMap:
          name: "{{ .Release.Name }}-postfix-config"
      - name: postfix-secure-config
        secret:
          secretName: "{{ .Release.Name }}-postfix-secure-config"
      - name: dovecot-config
        configMap:
          name: "{{ .Release.Name }}-dovecot-config"
      - name: dovecot-secure-config
        secret:
          secretName: "{{ .Release.Name }}-dovecot-secure-config"
      - name: opendkim-secret
        secret:
          secretName: {{ default (printf "%s-opendkim-key" .Release.Name) .Values.opendkim.existingSecret | quote }}
          defaultMode: 0400
      - name: tls-secret
        secret:
          secretName: {{ default (printf "%s-tls" .Release.Name) .Values.tls.existingSecret | quote }}
          defaultMode: 0400
{{- if .Values.volumes }}
      {{- toYaml .Values.volumes | nindent 6 }}
{{- end }}
{{- if .Values.persistence.existingClaim }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.persistence.storageClassName }}
      storageClassName: {{ .Values.persistence.storageClassName | quote }}
      {{- end }}
      resources:
        requests:
          storage: "{{ .Values.persistence.size }}"
{{- end }}

